struct {
    float4x4 viewMatrix;
    float4x4 projectionMatrix;
} CameraBuffer : BUFFER[0];

uniform struct {
    float4x4 worldMatrix;
} ModelBuffer : BUFFER[1];

void main(float4 aPosition, float4 aColor,
	out float4 position : POSITION,
	out float4 color : COLOR)
{
    // Change the position vector to be 4 units for proper matrix calculations.
    aPosition.w = 1.0f;

    // Calculate the position of the vertex against the world, view, and projection matrices.
    position = mul(aPosition, ModelBuffer.worldMatrix);
    position = mul(position, CameraBuffer.viewMatrix);
    position = mul(position, CameraBuffer.projectionMatrix);

    // Store the input color for the pixel shader to use.
    color = aColor;
}